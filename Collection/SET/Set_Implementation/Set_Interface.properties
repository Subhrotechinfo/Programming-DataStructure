#  Copyright Subhro Chatterjee

#SET INTERFACE

#   1.Unordered Collection Object
#   2.Implements - HashSet , LinkedSet , TreeSet 
#   3.Duplicates are not allowed.
#   4.Backed up by HashMap internally
#    Methods:
#        
#        1.Union
#        2.Intersection
#        3.Difference

#HASHSET
#
#    1.Underlying datastructure is HashTable
#    2.Insertion order not preserved.
#    3.Null not allowed.
#    4.LoadFactor - (Number of stored elements in the table)/size of the HashTable
#                   Efficient  - 0.75  Capacity - 16 , Current Elements - 12 then increase 
#    5.Time Complexity - O(1) ---> add,remove,look-up
#    6.Backed up by HashMap internally.

#            private transient HashMap map
#            
#                public HashSet(){
#                    map = new HashMap()
#                }

#    Constructor:
#            
#            1.new HashSet()
#            2.new HashSet(initialCapacity)
#            3.new HashSet(initialCapacity , loadFactor)
#            4.new HashSet(Colllection)

#    Methods:
#            1.add(element)
#            2.clear();
#            3.contains(Object)
#            4.remove(Object)
#            5.iterator()

#LINKED HASHSET
#    1.Ordered version of HashSet
#    2.Maintains double LinkedList
#    3.Insertion order preserved.
#    
#TREE SET 
#    
#    1.Implementation class of Sorted Set
#    2.Elements are sorted by key
#    3.Heterogenous Elements not allowed
#    4.Underlying datastructure is self-balancing Binary Search Tree
#        Add,remove,search - O(log n)
#    5.Null insertion not allowed - Null Pointer Exception    
#        Constructors:
#                
#                1.new TreeSet();
#                2.new TreeSet(Comparator)
#                3.new TreeSet(Collection)
#                4.new TreeSet(Sorted)
#
#        Method:
#                1.add(Object)
#                2.addAll(collection)
#                3.clear();
#                4.contains(Object)
#                5.first()
#                6.last()
#                7.headSet(toElement)
#                8.tailSet(formElement)
#                9.subSet(fromElement , toElement)
                








